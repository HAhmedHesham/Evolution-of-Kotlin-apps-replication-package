/*! Picturefill - Responsive Images that work today. (and mimic the proposed Picture element with span elements). Author: Scott Jehl, Filament Group, 2012 | License: MIT/GPLv2 */

(function( w ){

	// Enable strict mode
	"use strict";

	w.picturefill = function() {
		var ps = w.document.getElementsByTagName( "span" );

		// Loop the pictures
		for( var i = 0, il = ps.length; i < il; i++ ){
			if( ps[ i ].getAttribute( "data-picture" ) !== null ){

				var sources = ps[ i ].getElementsByTagName( "span" ),
					matches = [];

				// See if which sources match
				for( var j = 0, jl = sources.length; j < jl; j++ ){
					var media = sources[ j ].getAttribute( "data-media" );
					// if there's no media specified, OR w.matchMedia is supported 
					if( !media || ( w.matchMedia && w.matchMedia( media ).matches ) ){
						matches.push( sources[ j ] );
					}
				}

			// Find any existing img element in the picture element
			var picImg = ps[ i ].getElementsByTagName( "img" )[ 0 ];

			if( matches.length ){
				var matchedEl = matches.pop();
				if( !picImg || picImg.parentNode.nodeName === "NOSCRIPT" ){
					picImg = w.document.createElement( "img" );
					picImg.alt = ps[ i ].getAttribute( "data-alt" );
				}
				else if( matchedEl === picImg.parentNode ){
					// Skip further actions if the correct image is already in place
					continue;
				}

				picImg.src =  matchedEl.getAttribute( "data-src" );
				matchedEl.appendChild( picImg );
				picImg.removeAttribute("width");
				picImg.removeAttribute("height");
			}
			else if( picImg ){
				picImg.parentNode.removeChild( picImg );
			}
		}
		}
	};

	// Run on resize and domready (w.load as a fallback)
	if( w.addEventListener ){
		w.addEventListener( "resize", w.picturefill, false );
		w.addEventListener( "DOMContentLoaded", function(){
			w.picturefill();
			// Run once only
			w.removeEventListener( "load", w.picturefill, false );
		}, false );
		w.addEventListener( "load", w.picturefill, false );
	}
	else if( w.attachEvent ){
		w.attachEvent( "onload", w.picturefill );
	}

}( this ));
;
(function($){
	/* hoverIntent by Brian Cherne */
	$.fn.hoverIntent = function(f,g) {
		// default configuration options
		var cfg = {
			sensitivity: 7,
			interval: 100,
			timeout: 0
		};
		// override configuration options with user supplied object
		cfg = $.extend(cfg, g ? { over: f, out: g } : f );

		// instantiate variables
		// cX, cY = current X and Y position of mouse, updated by mousemove event
		// pX, pY = previous X and Y position of mouse, set by mouseover and polling interval
		var cX, cY, pX, pY;

		// A private function for getting mouse position
		var track = function(ev) {
			cX = ev.pageX;
			cY = ev.pageY;
		};

		// A private function for comparing current and previous mouse position
		var compare = function(ev,ob) {
			ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
			// compare mouse positions to see if they've crossed the threshold
			if ( ( Math.abs(pX-cX) + Math.abs(pY-cY) ) < cfg.sensitivity ) {
				$(ob).unbind("mousemove",track);
				// set hoverIntent state to true (so mouseOut can be called)
				ob.hoverIntent_s = 1;
				return cfg.over.apply(ob,[ev]);
			} else {
				// set previous coordinates for next time
				pX = cX; pY = cY;
				// use self-calling timeout, guarantees intervals are spaced out properly (avoids JavaScript timer bugs)
				ob.hoverIntent_t = setTimeout( function(){compare(ev, ob);} , cfg.interval );
			}
		};

		// A private function for delaying the mouseOut function
		var delay = function(ev,ob) {
			ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
			ob.hoverIntent_s = 0;
			return cfg.out.apply(ob,[ev]);
		};

		// A private function for handling mouse 'hovering'
		var handleHover = function(e) {
			// next three lines copied from jQuery.hover, ignore children onMouseOver/onMouseOut
			var p = (e.type == "mouseover" ? e.fromElement : e.toElement) || e.relatedTarget;
			while ( p && p != this ) { try { p = p.parentNode; } catch(e) { p = this; } }
			if ( p == this ) { return false; }

			// copy objects to be passed into t (required for event object to be passed in IE)
			var ev = jQuery.extend({},e);
			var ob = this;

			// cancel hoverIntent timer if it exists
			if (ob.hoverIntent_t) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); }

			// else e.type == "onmouseover"
			if (e.type == "mouseover") {
				// set "previous" X and Y position based on initial entry point
				pX = ev.pageX; pY = ev.pageY;
				// update "current" X and Y position based on mousemove
				$(ob).bind("mousemove",track);
				// start polling interval (self-calling timeout) to compare mouse coordinates over time
				if (ob.hoverIntent_s != 1) { ob.hoverIntent_t = setTimeout( function(){compare(ev,ob);} , cfg.interval );}

			// else e.type == "onmouseout"
			} else {
				// unbind expensive mousemove event
				$(ob).unbind("mousemove",track);
				// if hoverIntent state is true, then call the mouseOut function after the specified delay
				if (ob.hoverIntent_s == 1) { ob.hoverIntent_t = setTimeout( function(){delay(ev,ob);} , cfg.timeout );}
			}
		};

		// bind the function to the two event listeners
		return this.mouseover(handleHover).mouseout(handleHover);
	};
	
})(jQuery);;

/*
 * Superfish v1.5.0 - jQuery menu widget
 * Copyright (c) 2013 Joel Birch
 *
 * Dual licensed under the MIT and GPL licenses:
 * 	http://www.opensource.org/licenses/mit-license.php
 * 	http://www.gnu.org/licenses/gpl.html
 *
 * CHANGELOG: http://users.tpg.com.au/j_birch/plugins/superfish/changelog.txt
 */

;(function($){
	$.fn.superfish = function(op){

		var sf = $.fn.superfish,
			c = sf.c,
			$arrow = $('<span class="'+c.arrowClass+'"> &#187;</span>'),
			over = function(){
				var $$ = $(this), menu = getMenu($$);
				clearTimeout(menu.sfTimer);
				$$.showSuperfishUl().siblings().hideSuperfishUl();
			},
			out = function(){
				var $$ = $(this), menu = getMenu($$), o = sf.op;
				clearTimeout(menu.sfTimer);
				menu.sfTimer=setTimeout(function(){
					o.retainPath=($.inArray($$[0],o.$path)>-1);
					$$.hideSuperfishUl();
					if (o.$path.length && $$.parents('li.'+o.hoverClass).length<1){
						o.onIdle.call(this);
						over.call(o.$path);
					}
				},o.delay);	
			},
			getMenu = function($menu){
				var menu = $menu.parents('ul.'+c.menuClass+':first')[0];
				sf.op = sf.o[menu.serial];
				return menu;
			},
			addArrow = function($a){ $a.addClass(c.anchorClass).append($arrow.clone()); };
			
		return this.addClass(c.menuClass).each(function() {
			var s = this.serial = sf.o.length;
			var o = $.extend({},sf.defaults,op);
			o.$path = $('li.'+o.pathClass,this).slice(0,o.pathLevels).each(function(){
				$(this).addClass(o.hoverClass+' '+c.bcClass)
					.filter('li:has(ul)').removeClass(o.pathClass);
			});
			sf.o[s] = sf.op = o;
			
			$('li:has(ul)',this)[($.fn.hoverIntent && !o.disableHI) ? 'hoverIntent' : 'hover'](over,out).each(function() {
				if (o.autoArrows) {
					addArrow( $('>a:first-child',this) );
				}
			})
			.not('.'+c.bcClass)
				.hideSuperfishUl();
			
			var $a = $('a',this);
			$a.each(function(i){
				var $li = $a.eq(i).parents('li');
				$a.eq(i).focus(function(){over.call($li);}).blur(function(){out.call($li);});
			});
			o.onInit.call(this);
			
		});
	};

	var sf = $.fn.superfish;
	sf.o = [];
	sf.op = {};

	sf.c = {
		bcClass     : 'sf-breadcrumb',
		menuClass   : 'sf-js-enabled',
		anchorClass : 'sf-with-ul',
		arrowClass  : 'sf-sub-indicator'
	};
	sf.defaults = {
		hoverClass	: 'sfHover',
		pathClass	: 'overideThisToUse',
		pathLevels	: 1,
		delay		: 800,
		animation	: {opacity:'show'},
		speed		: 'normal',
		autoArrows	: true,
		disableHI	: false,		// true disables hoverIntent detection
		onInit		: function(){}, // callback functions
		onBeforeShow: function(){},
		onShow		: function(){},
		onHide		: function(){},
		onIdle		: function(){}
	};
	$.fn.extend({
		hideSuperfishUl : function(){
			var o = sf.op,
				not = (o.retainPath===true) ? o.$path : '';
			o.retainPath = false;
			var $ul = $('li.'+o.hoverClass,this).add(this).not(not).removeClass(o.hoverClass)
					.find('>ul').hide().css('visibility','hidden');
			o.onHide.call($ul);
			return this;
		},
		showSuperfishUl : function(){
			var o = sf.op,
				$ul = this.addClass(o.hoverClass)
					.find('>ul:hidden').css('visibility','visible');
			o.onBeforeShow.call($ul);
			$ul.animate(o.animation,o.speed,function(){ o.onShow.call($ul); });
			return this;
		}
	});

})(jQuery);
;

/*
 * Supersubs v0.2b - jQuery plugin
 * Copyright (c) 2008 Joel Birch
 *
 * Dual licensed under the MIT and GPL licenses:
 * 	http://www.opensource.org/licenses/mit-license.php
 * 	http://www.gnu.org/licenses/gpl.html
 *
 *
 * This plugin automatically adjusts submenu widths of suckerfish-style menus to that of
 * their longest list item children. If you use this, please expect bugs and report them
 * to the jQuery Google Group with the word 'Superfish' in the subject line.
 *
 */

;(function($){ // $ will refer to jQuery within this closure

	$.fn.supersubs = function(options){
		var opts = $.extend({}, $.fn.supersubs.defaults, options);
		// return original object to support chaining
		return this.each(function() {
			// cache selections
			var $$ = $(this);
			// support metadata
			var o = $.meta ? $.extend({}, opts, $$.data()) : opts;
			// get the font size of menu.
			// .css('fontSize') returns various results cross-browser, so measure an em dash instead
			var fontsize = $('<li id="menu-fontsize">&#8212;</li>').css({
				'padding' : 0,
				'position' : 'absolute',
				'top' : '-999em',
				'width' : 'auto'
			}).appendTo($$).width(); //clientWidth is faster, but was incorrect here
			// remove em dash
			$('#menu-fontsize').remove();
			// cache all ul elements
			$ULs = $$.find('ul');
			// loop through each ul in menu
			$ULs.each(function(i) {	
				// cache this ul
				var $ul = $ULs.eq(i);
				// get all (li) children of this ul
				var $LIs = $ul.children();
				// get all anchor grand-children
				var $As = $LIs.children('a');
				// force content to one line and save current float property
				var liFloat = $LIs.css('white-space','nowrap').css('float');
				// remove width restrictions and floats so elements remain vertically stacked
				var emWidth = $ul.add($LIs).add($As).css({
					'float' : 'none',
					'width'	: 'auto'
				})
				// this ul will now be shrink-wrapped to longest li due to position:absolute
				// so save its width as ems. Clientwidth is 2 times faster than .width() - thanks Dan Switzer
				.end().end()[0].clientWidth / fontsize;
				// add more width to ensure lines don't turn over at certain sizes in various browsers
				emWidth += o.extraWidth;
				// restrict to at least minWidth and at most maxWidth
				if (emWidth > o.maxWidth)		{ emWidth = o.maxWidth; }
				else if (emWidth < o.minWidth)	{ emWidth = o.minWidth; }
				emWidth += 'em';
				// set ul to width in ems
				$ul.css('width',emWidth);
				// restore li floats to avoid IE bugs
				// set li width to full width of this ul
				// revert white-space to normal
				$LIs.css({
					'float' : liFloat,
					'width' : '100%',
					'white-space' : 'normal'
				})
				// update offset position of descendant ul to reflect new width of parent
				.each(function(){
					var $childUl = $('>ul',this);
					var offsetDirection = $childUl.css('left')!==undefined ? 'left' : 'right';
					$childUl.css(offsetDirection,emWidth);
				});
			});
			
		});
	};
	// expose defaults
	$.fn.supersubs.defaults = {
		minWidth		: 9,		// requires em unit.
		maxWidth		: 25,		// requires em unit.
		extraWidth		: 0			// extra width can ensure lines don't sometimes turn over due to slight browser differences in how they round-off values
	};
	
})(jQuery); // plugin code ends
;
/*!
Copyright (c) 2013 Derek Petersen https://github.com/tuxracer/jquery-touchclick
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {
    var activeClass = "touchactive",
        touchstart,
        touchmove,
        touchend,
        timestamp;

    getTouchclickEl = function (target) {
        var $targetEl = $(target),
            $touchclickEl = $targetEl.closest("*[data-touchclick='true']");

        if ($touchclickEl.length) {
            return $touchclickEl;
        }

        return $targetEl;
    };

    timestamp = function () {
        return Math.round((new Date()).getTime() / 1000);
    };

    touchstart = function (e) {
        var $touchclickEl = getTouchclickEl(e.target),
            currentTimestamp = timestamp(),
            lastTimestamp = $touchclickEl.data("touchclick-last-touch"),
            difference = currentTimestamp - lastTimestamp;

        if (lastTimestamp && difference < 3 && e.type === "mousedown") {
            $touchclickEl.data("touchclick-disabled", true);
        } else {
            $touchclickEl.data("touchclick-disabled", false);
            $touchclickEl.addClass(activeClass);
        }

        if (e.type === "touchstart" || e.type === "MSPointerDown") {
            $touchclickEl.data("touchclick-last-touch", currentTimestamp);
        }
    };

    touchmove = function (e) {
        var $touchclickEl = getTouchclickEl(e.target);

        $touchclickEl.data("touchclick-disabled", true);
        $touchclickEl.removeClass(activeClass);
    };

    touchend = function (e) {
        var $touchclickEl = getTouchclickEl(e.target);

        if (!$touchclickEl.data("touchclick-disabled")) {
            e.type = "touchclick";
            $.event.dispatch.call(this, e);
        }

        $touchclickEl.data("touchclick-disabled", false);
        $touchclickEl.removeClass(activeClass);
    };

    $.event.special.touchclick = {
        setup: function () {
            var $el = $(this);

            if (window.navigator.msPointerEnabled) {
                $el.on("MSPointerDown", touchstart);
                $el.on("MSPointerUp", touchend);
            } else {
                $el.on("touchstart mousedown", touchstart);
                $el.on("touchmove mouseout", touchmove);
                $el.on("touchend mouseup", touchend);
            }
        },

        teardown: function () {
            var $el = $(this);

            if (window.navigator.msPointerEnabled) {
                $el.off("MSPointerDown", touchstart);
                $el.off("MSPointerUp", touchend);
            } else {
                $el.off("touchstart mousedown", touchstart);
                $el.off("touchmove mouseout", touchmove);
                $el.off("touchend mouseup", touchend);
            }
        }
    };
}));
;
//     Underscore.js 1.5.2
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,w=Object.keys,_=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION="1.5.2";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a=j.keys(n),u=0,i=a.length;i>u;u++)if(t.call(e,n[a[u]],a[u],n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E="Reduce of empty array with no initial value";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?"find":"filter"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e},j.sample=function(n,t,r){return arguments.length<2||r?n[j.random(n.length-1)]:j.shuffle(n).slice(0,Math.max(0,t))};var k=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=k(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={},i=null==r?j.identity:k(r);return A(t,function(r,a){var o=i.call(e,r,a,t);n(u,o,r)}),u}};j.groupBy=F(function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)}),j.indexBy=F(function(n,t,r){n[t]=r}),j.countBy=F(function(n,t){j.has(n,t)?n[t]++:n[t]=1}),j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var M=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):M(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return M(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,"length").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,""+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var R=function(){};j.bind=function(n,t){var r,e;if(_&&n.bind===_)return _.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));R.prototype=n.prototype;var u=new R;R.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u,i,a,o;return function(){i=this,u=arguments,a=new Date;var c=function(){var l=new Date-a;t>l?e=setTimeout(c,t-l):(e=null,r||(o=n.apply(i,u)))},l=r&&!e;return e||(e=setTimeout(c,t)),l&&(o=n.apply(i,u)),o}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=w||function(n){if(n!==Object(n))throw new TypeError("Invalid object");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},j.pairs=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},j.invert=function(n){for(var t={},r=j.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==String(t);case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if("[object Array]"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return"[object Array]"==l.call(n)},j.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){j["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,"callee"))}),"function"!=typeof/./&&(j.isFunction=function(n){return"function"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp("["+j.keys(I.escape).join("")+"]","g"),unescape:new RegExp("("+j.keys(I.unescape).join("|")+")","g")};j.each(["escape","unescape"],function(n){j[n]=function(t){return null==t?"":(""+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+"";return n?n+t:t},j.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return"\\"+B[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=new Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);
;
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */

window.matchMedia = window.matchMedia || (function( doc, undefined ) {

  "use strict";

  var bool,
      docElem = doc.documentElement,
      refNode = docElem.firstElementChild || docElem.firstChild,
      // fakeBody required for <FF4 when executed in <head>
      fakeBody = doc.createElement( "body" ),
      div = doc.createElement( "div" );

  div.id = "mq-test-1";
  div.style.cssText = "position:absolute;top:-100em";
  fakeBody.style.background = "none";
  fakeBody.appendChild(div);

  return function(q){

    div.innerHTML = "&shy;<style media=\"" + q + "\"> #mq-test-1 { width: 42px; }</style>";

    docElem.insertBefore( fakeBody, refNode );
    bool = div.offsetWidth === 42;
    docElem.removeChild( fakeBody );

    return {
      matches: bool,
      media: q
    };

  };

}( document ));


;
// mobile menu plugin
(function ($) {

  var settings = {
    initialized : false
  };

  // So we can access our menu data within the enquire callbacks located in scripts js
  window.menu_data = null;

  // set up methods
  var methods = {
    init : function (options) {

      return this.each(function () {

        // Initialize with options object
        if (options) {
          $.extend(settings, options);
        }

        var $this = $(this),
            data = $this.data('mobileMenu'),
            parentItems = $this.find('li.expanded');

        // Give global elements selected elements
        window.mobileMenu_elements = $this;

        // If the plugin hasn't been initialized yet
        if (!data) {

          var startData = {
            target : $this, // main ul
            leftPos : 0, // horizontal position of main ul
            levelNum : 0, // count of how many levels deep in menu
            windowWidth : $(window).width()
          };
          $this.data('mobileMenu', startData);
          window.menu_data = startData;
        }

        // Reference data object
        //var d = $this.data('mobileMenu');

        // Add class to menu for styling
        $this.addClass('mobile-menu');

        // set width and offset on uls based on browser width
        $this.find("ul").css({"width" : menu_data.windowWidth, "left" : menu_data.windowWidth}).show();

        // Find all menu items with children add toggles
        parentItems.each(function () {
          var $this = $(this),
              submenuToggle = $('<a href="javascript:void(0)" class="submenu-toggle" data-touchclick="true"><span class="element-invisible">Open Submenu</span></a>'),
              parentLink = $this.find('a').first().clone(),
              parentLinkHTML = parentLink.get(0).outerHTML;

          // add a toggle to expand submenus, div to enable positioning
          $this.append(submenuToggle).wrapInner("<div class='positioning' style='position:relative;'></div>");
          $('<li class="parent-link"><a href="javascript:void(0) "class="back-btn"><span class="element-invisible">Previous Menu Level</span></a>' + parentLinkHTML + '</li>').prependTo($this.find('ul').first());

        });


        /// EVENT HANDLER ATTACHMENTS
        // Attach event handlers only on first call to mobileMenu
        if (!settings.initialized) {

          // Mobile menu resize event handler - resets properties of menu data object and adjust CSS of elements.
          var mobileMenu_resize = _.throttle(function () {

            // Only perform these operations if we're within a mobile viewport
            if ($this.hasClass('mobile-menu')) {

              // Reference global menu data
              var d = window.menu_data;

              // Update window width property of menu data object
              d.windowWidth = $(window).width();

              // Update levelNum and leftPos properties of menu data object
              if (d.levelNum > 0) {
                // set leftPos to negative of levelNum times windowWidth
                d.leftPos = d.levelNum * (-1 * d.windowWidth);
              } else {
                d.leftPos = 0;
              }

              // Set menu position based on new leftPos
              d.target.css("left", d.leftPos + "px");

              // Set widths of child ULs
              d.target.find("ul").css({"width" : d.windowWidth, "left" : d.windowWidth});
            }
          }, 10);

          // Attach resize handler
          $(window).resize(mobileMenu_resize);

        }

        // Add click functionality to the submenu toggle links
        $this.find('.submenu-toggle').live("click.mobilemenu", function (event) {
          event.preventDefault();
          mobileMenu_resize();

          // Reference the click menu item
          var $link = $(this);

          // Reference the menu data
          //var d = $this.data('mobileMenu');
          var d = window.menu_data;

          // Set levelNum
          d.levelNum = $link.parents("ul").length;

          // count how many levels deep the link is
          levelNum = $link.parents("ul").length;

          // position the menu off to the left
          d.leftPos = d.leftPos - d.windowWidth;

          // Save last $link reference on our $lastLink global stack so we can save a reference to the last hidden
          // closest LIs and pop them off this stack to show them when the user navigates
          // back. In other words, this stack saves the last hidden elements which are then re-shown with .show() in
          // '.back-btn' callback below.
          if (!$.data(document.body, '$lastLink')) {
            $.data(document.body, '$lastLink', []);
          }
          var linkStack = $.data(document.body, '$lastLink');
          linkStack.push($link);

          // Set the correct parent as the active level & hide non targeted menus
          $link.closest('li').siblings().removeClass('active-level').hide();

          // Make sure menu links within .active-level are shown
          $link.closest('li').addClass('active-level').show();

          // Position the menu accordingly based on the level number
          d.target.css("left", d.leftPos + "px");
        });

        // Add click functionality to the back links
        $this.find('.back-btn').live("click.mobilemenu", function (event) {
          event.preventDefault();
          mobileMenu_resize();

          // Reference the clicked back button
          var $link = $(this);

          // Reference the menu data
          //d = $this.data('mobileMenu');
          var d = window.menu_data;

          // remove one from previous level
          d.levelNum -= 1;

          // Reference our $lastLink stack (created in the '.submenu-toggle' event handler) and retrieve the last
          // element popped onto the stack using it as a reference to locate sibling elements that had been hidden
          // so we can show them when a user is back tracking through the menu.
          var $lastLink = $.data(document.body, '$lastLink');
          $lastLink = $lastLink.pop();
          $lastLink.closest('li').siblings().show();

          // Remove active level class from li one level up
          $link.parent().parent().closest('li').removeClass('active-level');

          // Slide menu forward
          d.leftPos = d.leftPos + d.windowWidth;

          d.target.css("left", d.leftPos + "px");
        });

      });
    },
    save : function () {
      saveData(this);
    },
    destroy : function () {
      /*
       // Remove effects, bindings and classes
       return this.each(function () {
       var $this = $(this);

       $this.removeClass('mobile-menu');
       $this.find('li.expanded div') // search inside wrapping div
       .children('.submenu-toggle')
       .unwrap() // remove the wrapping div
       .remove(); // remove the toggle link
       $this.find('li.parent-link')
       .remove(); // remove the parent-link list item
       $this.find('ul.menu')
       .removeAttr('style'); // remove the inline width and left pos
       $this.removeData('mobileMenu'); // remove the data object
       $this.unbind('.mobileMenu'); // unset event bindings
       });
       */
    }
  };

  $.fn.mobileMenu = function (method) {

    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof method === 'object' || !method) {
      return methods.init.apply(this, arguments);
    } else {
      $.error('Method ' + method + ' does not exist on jQuery.mobileMenu');
    }


  };
})(jQuery);
;
// collapse nav plugin
(function ($) {
    // utility function
    function closeBranches(item) {
      // traverse tree and check each expanded branch to see if it doesn't contain the click item; then hide the current branch
      item.each(function () {
        if ($(this).has(item).length === 0) {
          $(this).find('.menu').hide();
          $(this).find('.collapse').addClass('expand');
          $(this).find('.expand').removeClass('collapse');
        }
      });
    }

    // set up methods
    var methods = {
        init: function (options) {
            //
            return this.each(function () {
                var $this = $(this),
                    submenuToggle = $('<a href="javascript:;" class="submenu-toggle closed"><span class="offscreen">Toggle Submenu</span></a>');

                $this.addClass('collapse-nav');
                // add the plus button to all collapsed
                $this.find('.expanded:not(.active-trail)')
                    .prepend(submenuToggle);
                // collapse all non-active trails
                $this.find('.expanded:not(.active-trail) ul.menu')
                    .hide();

                $this.find('.submenu-toggle')
                    .bind('click.collapseNav', function (event) {
                        console.log($(this).next().next());
                        event.preventDefault();
                        $(this)
                            .toggleClass('opened')
                            .toggleClass('closed')
                            .next().next().toggle(); // TODO think this is supposed to close children of collapsed parent
                    });
            });
        },
        destroy: function () {
            //
            return this.each(function () {
                var $this = $(this);

                $this.removeClass('collapse-nav');
                $this.unbind('.collapseNav');
                $this.find('li.expanded')
                    .children('.submenu-toggle')
                    .remove();
            });
        }
    };

    $.fn.collapseNav = function (method) {

        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.collapseNav');
        }


    };
})(jQuery);
;
// enquire.js v1.5.6 - Awesome Media Queries in JavaScript
// Copyright (c) 2013 Nick Williams - http://wicky.nillia.ms/enquire.js
// License: MIT (http://www.opensource.org/licenses/mit-license.php)

window.enquire=function(e){"use strict";function t(e,t){var n=0,r=e.length,i;for(n;n<r;n++){i=t(e[n],n);if(i===!1)break}}function n(e){return Object.prototype.toString.apply(e)==="[object Array]"}function r(e){return typeof e=="function"}function i(e){this.initialised=!1,this.options=e,e.deferSetup||this.setup()}function s(e,t){this.query=e,this.isUnconditional=t,this.handlers=[],this.matched=!1}function o(){if(!e)throw new Error("matchMedia is required");var t=new s("only all");this.queries={},this.listening=!1,this.browserIsIncapable=!t.matchMedia()}return i.prototype={setup:function(e){this.options.setup&&this.options.setup(e),this.initialised=!0},on:function(e){this.initialised||this.setup(e),this.options.match(e)},off:function(e){this.options.unmatch&&this.options.unmatch(e)},destroy:function(){this.options.destroy?this.options.destroy():this.off()},equals:function(e){return this.options===e||this.options.match===e}},s.prototype={matchMedia:function(){return e(this.query).matches},addHandler:function(e,t){var n=new i(e);this.handlers.push(n),t&&this.matched&&n.on()},removeHandler:function(e){var n=this.handlers;t(n,function(t,r){if(t.equals(e))return t.destroy(),!n.splice(r,1)})},assess:function(e){this.matchMedia()||this.isUnconditional?this.match(e):this.unmatch(e)},match:function(e){if(this.matched)return;t(this.handlers,function(t){t.on(e)}),this.matched=!0},unmatch:function(e){if(!this.matched)return;t(this.handlers,function(t){t.off(e)}),this.matched=!1}},o.prototype={register:function(e,i,o){var u=this.queries,a=o&&this.browserIsIncapable,f=this.listening;return u.hasOwnProperty(e)||(u[e]=new s(e,a),this.listening&&u[e].assess()),r(i)&&(i={match:i}),n(i)||(i=[i]),t(i,function(t){u[e].addHandler(t,f)}),this},unregister:function(e,n){var r=this.queries;return r.hasOwnProperty(e)?(n?r[e].removeHandler(n):(t(this.queries[e].handlers,function(e){e.destroy()}),delete r[e]),this):this},fire:function(e){var t=this.queries,n;for(n in t)t.hasOwnProperty(n)&&t[n].assess(e);return this},listen:function(e){function n(n){var r;window.addEventListener(n,function(n){r&&clearTimeout(r),r=setTimeout(function(){t.fire(n)},e)},!1)}var t=this;return e=e||500,this.listening?this:(window.addEventListener&&(n("resize"),n("orientationChange")),t.fire(),this.listening=!0,this)}},new o}(window.matchMedia);;
/*!
 * jquery.customSelect() - v0.4.2
 * http://adam.co/lab/jquery/customselect/
 * 2013-05-22
 *
 * Copyright 2013 Adam Coulombe
 * @license http://www.opensource.org/licenses/mit-license.html MIT License
 * @license http://www.gnu.org/licenses/gpl.html GPL2 License 
 */

(function ($) {
    'use strict';

    $.fn.extend({
        customSelect: function (options) {
            // filter out <= IE6
            if (typeof document.body.style.maxHeight === 'undefined') {
                return this;
            }
            var defaults = {
                    customClass: 'customSelect',
                    mapClass:    true,
                    mapStyle:    true
            },
            options = $.extend(defaults, options),
            prefix = options.customClass,
            changed = function ($select,customSelectSpan) {
                var currentSelected = $select.find(':selected'),
                customSelectSpanInner = customSelectSpan.children(':first'),
                html = currentSelected.html() || '&nbsp;';

                customSelectSpanInner.html(html);
                
                if (currentSelected.attr('disabled')) {
                	customSelectSpan.addClass(getClass('DisabledOption'));
                } else {
                	customSelectSpan.removeClass(getClass('DisabledOption'));
                }
                
                setTimeout(function () {
                    customSelectSpan.removeClass(getClass('Open'));
                    $(document).off('mouseup.'+getClass('Open'));                  
                }, 60);
            },
            getClass = function(suffix){
                return prefix + suffix;
            };

            return this.each(function () {
                var $select = $(this),
                    customSelectInnerSpan = $('<span />').addClass(getClass('Inner')),
                    customSelectSpan = $('<span />'),
                    position = $select.position();

                $select.after(customSelectSpan.append(customSelectInnerSpan));
                
                customSelectSpan.addClass(prefix);

                if (options.mapClass) {
                    customSelectSpan.addClass($select.attr('class'));
                }
                if (options.mapStyle) {
                    customSelectSpan.attr('style', $select.attr('style'));
                }

                $select
                    .addClass('hasCustomSelect')
                    .on('update', function () {
						changed($select,customSelectSpan);
						
                        var selectBoxWidth = parseInt($select.outerWidth(), 10) -
                                (parseInt(customSelectSpan.outerWidth(), 10) -
                                    parseInt(customSelectSpan.width(), 10));
						
						// Set to inline-block before calculating outerHeight
						customSelectSpan.css({
                            display: 'inline-block'
                        });
						
                        var selectBoxHeight = customSelectSpan.outerHeight();

                        if ($select.attr('disabled')) {
                            customSelectSpan.addClass(getClass('Disabled'));
                        } else {
                            customSelectSpan.removeClass(getClass('Disabled'));
                        }

                        customSelectInnerSpan.css({
                            width:   selectBoxWidth,
                            display: 'inline-block'
                        });

                        $select.css({
                            '-webkit-appearance': 'menulist-button',
                            width:                customSelectSpan.outerWidth(),
                            position:             'absolute',
                            opacity:              0,
                            height:               selectBoxHeight,
                            fontSize:             customSelectSpan.css('font-size'),
                            left:                 position.left,
                            top:                  position.top
                        });
                    })
                    .on('change', function () {
                        customSelectSpan.addClass(getClass('Changed'));
                        changed($select,customSelectSpan);
                    })
                    .on('keyup', function (e) {
                        if(!customSelectSpan.hasClass(getClass('Open'))){
                            $select.blur();
                            $select.focus();
                        }else{
                            if(e.which==13||e.which==27||e.which==9){
                                changed($select,customSelectSpan);
                            }
                        }
                    })
                    .on('mousedown', function (e) {
                        customSelectSpan.removeClass(getClass('Changed'));
                    })
                    .on('mouseup', function (e) {
                        
                        if( !customSelectSpan.hasClass(getClass('Open'))){
                            // if FF and there are other selects open, just apply focus
                            if($('.'+getClass('Open')).not(customSelectSpan).length>0 && typeof InstallTrigger !== 'undefined'){
                                $select.focus();
                            }else{
                                customSelectSpan.addClass(getClass('Open'));
                                e.stopPropagation();
                                $(document).one('mouseup.'+getClass('Open'), function (e) {
                                    if( e.target != $select.get(0) && $.inArray(e.target,$select.find('*').get()) < 0 ){
                                        $select.blur();
                                    }else{
                                        changed($select,customSelectSpan);
                                    }
                                });
                            }
                        }
                    })
                    .focus(function () {
                        customSelectSpan.removeClass(getClass('Changed')).addClass(getClass('Focus'));
                    })
                    .blur(function () {
                        customSelectSpan.removeClass(getClass('Focus')+' '+getClass('Open'));
                    })
                    .hover(function () {
                        customSelectSpan.addClass(getClass('Hover'));
                    }, function () {
                        customSelectSpan.removeClass(getClass('Hover'));
                    })
                    .trigger('update');
            });
        }
    });
})(jQuery);
;
(function($) {

	$.fn.changeElementTypeTo = function(newType, newClasses) {
    	if ( !this.length )
        	return;

	    var attrs = {};

	    $.each(this[0].attributes, function(idx, attr) {
	        attrs[attr.nodeName] = attr.nodeValue;
	    });

	    attrs['class'] = newClasses;

	    this.replaceWith(function() {
	        return $("<" + newType + " />", attrs).append($(this).contents());
	    });
	}

    $.fn.changeElementTypeReverse = function(newType) {
        if ( !this.length )
        	return;

        var attrs = {};        

        $.each(this[0].attributes, function(idx, attr) {
    		// don't include the faux- classes
        	if ( attr.nodeValue !== 'faux-table-cell' &&
        		 attr.nodeValue !== 'faux-table-row' &&
        		 attr.nodeValue !== 'faux-table-cell faux-table-cell-th' &&
        		 attr.nodeValue !== 'faux-table-cell faux-table-cell-td' )
            	attrs[attr.nodeName] = attr.nodeValue;
        });

        this.replaceWith(function() {
            return $("<" + newType + " />", attrs).append($(this).contents());
        });
    }

	function mobilizeAgendaTable(){
		$(".field-name-field-agenda-text table tr, table.responsive-table tr").changeElementTypeTo("div", "faux-table-row");
		$(".field-name-field-agenda-text table td, table.responsive-table td").changeElementTypeTo("div", "faux-table-cell faux-table-cell-td");
		$(".field-name-field-agenda-text table th, table.responsive-table th").changeElementTypeTo("div", "faux-table-cell faux-table-cell-th");
	}


	function unMobilizeAgendaTable(){
	    $(".field-name-field-agenda-text table div.faux-table-row, table.responsive-table div.faux-table-row").changeElementTypeReverse("tr");
		$(".field-name-field-agenda-text table div.faux-table-cell-td, table.responsive-table div.faux-table-cell-td").changeElementTypeReverse("td");
		$(".field-name-field-agenda-text table div.faux-table-cell-th, table.responsive-table div.faux-table-cell-th").changeElementTypeReverse("th");
	}

	unMobilizeAgendaTable();

	/**
	 * Trigger the responsive-agenda-tables.js code.
	 */
	enquire.register("screen and (max-width:47.9em)", {
	  
	  match: mobilizeAgendaTable,
	  
	  unmatch: unMobilizeAgendaTable

	} );


})(jQuery);;
(function ($, Drupal, window, document, undefined) {
    Drupal.behaviors.header_behavior = {
        attach: function(context, settings) {

            $('#navigation').detach().appendTo('.header-wrapper');

            $('.region-header #block-search-form').clone().attr('id','block-search-form--2').appendTo('.region-navigation');

              $(window).scroll(function() {
                if ($(document).scrollTop() > 75) {
                  $('#navigation').addClass('scroll-top menu-scroll');
                } else {
                  $('#navigation').removeClass('scroll-top menu-scroll');

                }
              });

        } /*end*/
    };
})(jQuery, Drupal, this, this.document);
;
function getQueryVariable(variable) {
  var query = window.location.search.substring(1);
  var vars = query.split("&");
  for (var i = 0; i < vars.length; i++) {
    var pair = vars[i].split("=");
    if (pair[0] == variable) {
      return pair[1];
    }
  }
  return(false);
}
/**
 *
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */
// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function ($, Drupal, window, document, undefined) {
  // Place your code here.

  // add even/odd clsses to table rows
  $("tbody > tr:odd").addClass("odd");
  $("tbody > tr:not(.odd)").addClass("even");


})(jQuery, Drupal, this, this.document);


(function ($) {

  jQuery.extend({
    getUrlVars : function () {
      var vars = [], hash;
      var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
      for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
      }
      return vars;
    },
    getUrlVar : function (name) {
      return jQuery.getUrlVars()[name];
    }
  });

  $(document).ready(function () {
    // set up menu toggling
    $("#menu-toggle").click(function () {
      $(".primary-navigation")
          .toggle();
      $("#block-search-form--2")
          .toggle();
      $("#menu-toggle").toggleClass("open");
    });

    var ipp = getQueryVariable('items_per_page');
    switch (ipp) {
      case '20':
        $('.ipp-20').addClass('ipp-active');
        break;
      case '50':
        $('.ipp-50').addClass('ipp-active');
        break;
      case '100':
        $('.ipp-100').addClass('ipp-active');
        break;
      default:
        $('.ipp-20').addClass('ipp-active');
    }

    $('#transcript-title').click(function() {
        $('#transcript-title').toggleClass( "expanded" );
        return false;
    });

    $('#transcript-title').click(function() {
        $('.transcript-content').toggle();
        return false;
    });

    // Photo Gallery Slide Show
    $("#galleriffic").each( function() { 
      $(this).find("#gallery").insertBefore($(this).find("#thumbs") ); 
    });
	$("#galleriffic a.thumb > img").attr('alt', 'Photo Gallery Image Thumbnail');
	$(window).bind("load", function() {
		$("#galleriffic a.advance-link > img").attr('alt', ' ');
	});

    /* CALENDAR */
    $('.view-public-event-calendar .view-header .view-type-links .events-calendar-view').addClass('active');
    $('body').addClass('show-calendar').removeClass('hide-calendar');
    $('.view-public-event-calendar .view-header .view-type-links a').click(function (e) {
      e.preventDefault();
      $('.view-public-event-calendar .view-header .view-type-links a').removeClass('active');
      $(this).addClass('active');
      if ($(this).hasClass('events-calendar-view')) {
        $('body').addClass('show-calendar').removeClass('hide-calendar');
      } else {
        $('body').removeClass('show-calendar').addClass('hide-calendar');
      }
    });

    $(document).ajaxComplete(function () {
      if ($('body').hasClass('show-calendar')) {
        $('.view-public-event-calendar .view-header .view-type-links .events-calendar-view').addClass('active');
        $('.view-public-event-calendar .view-header .view-type-links .events-list-view').removeClass('active');
      } else {
        $('.view-public-event-calendar .view-header .view-type-links .events-calendar-view').removeClass('active');
        $('.view-public-event-calendar .view-header .view-type-links .events-list-view').addClass('active');
      }


      $('.view-public-event-calendar .view-header .view-type-links a').click(function (e) {
        e.preventDefault();
        $('.view-public-event-calendar .view-header .view-type-links a').removeClass('active');
        $(this).addClass('active');
        if ($(this).hasClass('events-calendar-view')) {
          $('body').addClass('show-calendar').removeClass('hide-calendar');
        } else {
          $('body').removeClass('show-calendar').addClass('hide-calendar');
        }
      });
    }); // end ajaxComplete

    /* BUREAUS ADDITIONAL INFO EQUAL HEIGHT */
    $('.view-bureau-additional-info.view-display-id-block').each(function () {
      var highestBox = 0;
      $(this).find('.field-name-field-bureau-additional-info').each(function () {
        if ($(this).height() > highestBox) {
          highestBox = $(this).height();
        }
      });
      $(this).find('.field-name-field-bureau-additional-info img,.node-bureau-landing-page.view-mode-full img').css('height', 'auto');
      $(this).find('.field-name-field-bureau-additional-info').height(highestBox);
    });


    /* BUREAUS ADDITIONAL INFO ORDER */
    var orderClasses = ['first', 'second', 'third'];
    $('.field-name-field-bureau-additional-info').addClass(function (i, c) {
      return orderClasses[i % orderClasses.length];
    });


    /* IPHONE SELECT/INPUT SCALING BUG */
    var metas = document.getElementsByTagName('meta');
    var i;
    if (navigator.userAgent.match(/iPhone/i)) {
      for (i = 0; i < metas.length; i++) {
        if (metas[i].name == "viewport") {
          metas[i].content = "width=device-width, minimum-scale=1.0, maximum-scale=1.0";
        }
      }
      document.addEventListener("gesturestart", gestureStart, false);
    }
    function gestureStart() {
      for (i = 0; i < metas.length; i++) {
        if (metas[i].name == "viewport") {
          metas[i].content = "width=device-width, minimum-scale=0.25, maximum-scale=1.6";
        }
      }
    }


    /* EXPOSED FILTERS */
    // apply custom select style to select lists
    if ((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i))) {
    } else {
      var exfilrv = 0;
      if (navigator.appName == 'Microsoft Internet Explorer') {
        var exfilua = navigator.userAgent;
        var exfilre = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
        if (exfilre.exec(exfilua) != null)
          exfilrv = parseFloat(RegExp.$1);
      }
      if (exfilrv != 7){
        $('.form-select').customSelect();
      }
    }

    // Rebuild selects w/ customSelect after ajax update.
    $(document).ajaxStop(function() {
      if ((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i))) {
      } else {
        if (exfilrv != 7){
          $('.form-select').customSelect();
        }
      }
    });

    // remove description when date field is focused
    $('.form-item-field-release-date-value-max-date input,.form-item-field-release-date-value-min-date input,.form-item-date-filter-min-date input,.form-item-date-filter-max-date input').focus(function () {
      $(this).closest('.form-item').find('.description').css('display', 'none');
    });
    // show description when date field is blurred and no value was entered
    /*$('.form-item-field-release-date-value-max-date input,.form-item-field-release-date-value-min-date input,.form-item-date-filter-min-date input,.form-item-date-filter-max-date input').blur(function(){
     if ($(this).val()==''){
     $(this).closest('.form-item').find('.description').css('display','block');
     }
     });*/
    // clear description is field is populate
    $('.form-item-field-release-date-value-max-date input,.form-item-field-release-date-value-min-date input,.form-item-date-filter-min-date input,.form-item-date-filter-max-date input').each(function () {
      if ($(this).val() == '' || $(this).val() == null) {
        $(this).closest('.form-item').find('.description').css('display', 'block');
      } else {
        $(this).closest('.form-item').find('.description').css('display', 'none');
      }
    });

    // grid clearing for one-stop
    $('.node-one-stop .field-group-fieldset.group-images .field-name-field-image-reference.field-type-node-reference:nth-child(4n+1)').addClass('clear-row');
    $('.node-one-stop .field-group-fieldset.group-videos .field-name-field-video-reference.field-type-node-reference:nth-child(4n+1)').addClass('clear-row');
    $('.node-type-event .field-group-fieldset.group-images .field-name-field-image-reference.field-type-node-reference:nth-child(4n+1)').addClass('clear-row');
    $('.node-type-event .field-group-fieldset.group-videos .field-name-field-video-reference.field-type-node-reference:nth-child(4n+1)').addClass('clear-row');
    // touchscreen mechanism for closing the main menu if anywhere outside of the main menu is tapped
    $('html:not(.no-touch) body').bind('touchend', function (e) {
      if (e.target.className !== 'menu' && !$(e.target).parents().is('.menu')) {
        $('ul.menu li').removeClass('sfHover');
      }
      ;
    });

    // duration placed top of image on Video pages
    $(".node-teaser").each( function() {
      $(this).find(".field-duration").appendTo($(this).find(".field-name-field-video-thumbnail") );
    });

    /*
     * RESPONSIVE CODE
     * - Code that is responsible for responsive modifications that take place when a window resizes to a specified
     * - break point using media query handling via enquire.js
     */

    // Allows us to get IE version number
    var getIEVersion = function() {
      var rv = -1;
      if (navigator.appName == 'Microsoft Internet Explorer') {
        var ua = navigator.userAgent;
        var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
        if (re.exec(ua) != null)
          rv = parseFloat(RegExp.$1);
      }
      return rv;
    };


    // *** BELOW CODE - Removed from match() function.... This entire Enquire.js block may not be at all needed
    // Remove classes and inline styles that hide main nav
    $('.primary-navigation')
        .removeClass('element-hidden')
        .css({'display' : '', 'visibility' : ''});

    // Remove classes and inline styles that hide search form
    /*$("#block-search-form")
        .removeClass('element-hidden')
        .css({'display' : '', 'visibility' : ''}); */

    // Call collapseNav plugin on sidebar menu
    $('.vertical-nav .menu-block-wrapper > ul').collapseNav();

    // Add sfmenu class to main menu for keyboard accessibility
    $('.primary-navigation .menu-level-1 > ul')
        .addClass('sf-menu');

    // Intialize superfish on menu
    $('ul.sf-menu').superfish({
      autoArrows : false // disable generation of arrow mark-up
    });
    // *** END BELOW CODE

      /*    enquire.register("screen and (min-width:48em)", {

      deferSetup : false,

      setup : function setup() {
      },

      match : function () {
        //console.log('"48em" : match()');
        //alert('"48em" : match()');
      },

      unmatch : function () {
        //console.log('"48em" : unmatch()');
        //alert('"48em" : unmatch()');

        // Remove superfish classes and inline styling
        *//*
         $('.primary-navigation ul')
         .removeClass('sf-menu sf-js-enabled sf-with-ul sf-sub-indicator')
         .css({'display' : '', 'visibility' : ''});
         *//*
      }
    }, true).listen(10);
    */

    // FOR IE 8 (and below) we manage breakpoints manually
    // If window size is greater than 48em in IE 8 and below we register a breakpoint handler to mimic behaviors
    // not being triggered by enquire.js in IE 8 and below.
    var ieVersion = getIEVersion();
    if (ieVersion <= 8 && ieVersion != -1) {

      var winWidth = $(window).width(),
          winHeight = $(window).height();
      var ie_once_on_load = false;

      var breakpoint_IE = function() {

        var onResize = _.throttle(function() {
          var w = $('#page').width();
          if (w >= (640)) {
            $('.primary-navigation').removeClass('element-hidden').show();
            $("#block-search-form--2").removeClass('element-hidden').show();
          } else if (w < 640) {
            $("#block-search-form--2").addClass('element-hidden').removeAttr('style').hide();
            $('.primary-navigation').addClass('element-hidden').removeAttr('style').hide();
          }
        }, 100);

        // Poll the new width and height
        var winNewWidth = $(window).width(),
            winNewHeight = $(window).height();

        // Compare the new height and width with the old
        var resizeTimeout = null;
        if (winWidth != winNewWidth || winHeight != winNewHeight || !ie_once_on_load) {
          window.clearTimeout(resizeTimeout);
          resizeTimeout = window.setTimeout(onResize, 10);
          ie_once_on_load = true;
        }

        // Update the width and height
        winWidth = winNewWidth;
        winHeight = winNewHeight;

      };
      $(window).resize(breakpoint_IE);
      breakpoint_IE();

    // IN ALL OTHER BROWSERS Except for IE 8 (and below), use Enquire.js
    // IE 8 and below aren't using this code anyway and it seems likely that the performance issues
    // being experienced in IE 7 are a result of the many reregistering event listeners that enquire.js
    // POORLY implements.
    } else {

      var mobile_menu_initialized = false;
      enquire.register("screen and (max-width:47.9em)", {

        deferSetup : true,

        setup : function setup() {
        },

        match : function () {
          //console.log('"47.9em" : match()');
          //alert('"47.9em" : match()');

          // Before we call mobileMenu, reset the window.menu_data properties if the object exists
          if (!_.isNull(window.menu_data)) {
            window.menu_data.leftPos = 0;
            window.menu_data.levelNum = 0;
          }

          // Initialize mobile menu plugin to main menu
          if (!mobile_menu_initialized) {
            mobile_menu_initialized = true;
            $('.primary-navigation .menu-level-1 > ul')
                .mobileMenu()
                .addClass('test');
          } else {
            $('.primary-navigation .menu-level-1 > ul')
              //.mobileMenu({initialized: true})
                .mobileMenu()
                .addClass('test');
          }

          // Make sure any previously visited menus are hidden
          $('ul.menu li.active-level').removeClass('active-level').show();

          // Restore menu's DOM alterations
          var mobileMenus = window.mobileMenu_elements;
          mobileMenus.each(function(index, value) {

            // Reference the current mobile menu
            var $this = $(this);

            // Add menu classes and position menus
            $this.addClass('mobile-menu').addClass('test').css({left: '0px'});

            // Make sure all menus are visible
            $this.find('ul.menu').css({display: 'block', visibility: 'visible'});
          });

          // Add classes to hide main nav and search (make sure they're initially hidden)
          // Enquire.js creates a race condition between various match and unmatches for some rediculous reason
          // so to make sure the nav and search divs are initially hidden we must delay a callback for a fraction
          // of a second to ensure they're indeed hidden.
          setTimeout(function() {
            $('.primary-navigation').addClass('element-hidden').removeAttr('style').hide();
            $("#block-search-form--2").addClass('element-hidden').removeAttr('style').hide();
          }, 250);
        },

        unmatch : function () {
          //console.log('"47.9em" : unmatch()');
          //alert('"47.9em" : unmatch()');

          // Remove hidden class and adjust CSS properties on Primary Navigation
          $('.primary-navigation')
              .removeClass('element-hidden')
              .css({'display' : '', 'visibility' : ''});

          // Remove all inline styles from list elements
          $('.primary-navigation li').removeAttr('style');

          // Remove hidden class and adjust CSS properties on Search Form
          $("#block-search-form--2")
              .removeClass('element-hidden')
              .css({'display' : '', 'visibility' : ''});

          // Destroy mobileMenu's DOM alterations
          var mobileMenus = window.mobileMenu_elements;
          mobileMenus.each(function(index, value) {

            // Reference the current mobile menu
            var $this = $(this);

            // Remove class and inline styling from mobile menu
            $this.removeClass('mobile-menu').removeClass('test').removeAttr('style');

            // Find mobileMenu inserted wrappers and remove them
            $($('.positioning', $this).children()).unwrap();

            // Remove .submenu-toggle anchors
            $('.submenu-toggle', $this).remove();

            // Remove the parent link list item
            $this.find('li.parent-link').remove();

            // Remove the inline width and left positioning
            $this.find('ul.menu').removeAttr('style');

            // Unbind mobile menu events (most importantly resize)
            $('.primary-navigation .menu-level-1 > ul').unbind();

            $('#menu-toggle').removeClass('open');
          });

          // Remove mobile menu plugin from main menu
          $('.primary-navigation ul').removeClass('element-hidden').removeClass('test');
          //$('.primary-navigatoin ul.menu').removeAttr('style');

        }
      }).listen(10);


    }


    //Business Center Toggle Menu (Explore the Business Center)


    //Extra hide so that toggle responds correctly the first time
    $('.block--explore .view-content ul').hide().addClass('is-closed');

    //Add tabindex for accessibility
    $('.block--explore h3').attr('tabindex', '0');

    //Close open menus if clicked elsewhere
    $(document).on('click', function(event) {
      if (!$(event.target).closest('.block--explore').length) {
        // Hide the menus.
        $('.block--explore .view-content ul').hide().addClass('is-closed');
        $('.block--explore h3').removeClass('is-open');
      }
    });

    $('.block--explore ul li:last-child').on('focusout', function() {
      $('.block--explore .view-content ul').hide().addClass('is-closed');
      $('.block--explore h3').removeClass('is-open');
    });

    //Toggle
    $('.block--explore h3').focus(function(){

      if($(this).next('ul').hasClass('is-closed') || $(this).parent('.view-header').next('.view-content').find('ul').hasClass('is-closed')){
        $('.block--explore .view-content ul').hide().removeClass('is-open').addClass('is-closed');
        $(this).next('ul').fadeIn(300).removeClass('is-closed').addClass('is-open');
        $('.block--explore h3').removeClass('is-open');
        $(this).addClass('is-open');
        $(this).parent('.view-header').next('.view-content').find('ul').fadeIn(300).removeClass('is-closed').addClass('is-open');
      }else if($(this).next('ul').hasClass('is-open')|| $(this).parent('.view-header').next('.view-content').find('ul').hasClass('is-open')){
        $(this).next('ul').fadeOut(300).removeClass('is-open').addClass('is-closed');
        $(this).removeClass('is-open');
        $(this).parent('.view-header').next('.view-content').find('ul').fadeOut(300).removeClass('is-open').addClass('is-closed');
      }

    });


    // FOIA webform
    // Modify DOM so that conditional fields appear after the radio buttons that trigger them.
    // Also, add currency formatting (commas and hundredths) as user types.

    if ($("body.section-foia").length !== 0) {
      // Move the "Don't have email?" link next to the Email field label.
      var no_email_link = $(".webform-component--dont-have-email").detach();
      var email_field = $(".webform-component--email label");
      no_email_link.insertBefore(email_field);

      // Move conditional fields for the "Describe the records you are requesting" radio button group.

      // Document Request: move the conditional "seeking other" fields so they appear after the "seeking other" radio button.
      var seeking_other_textarea = $(".webform-component--records-fieldset--ftc-records").detach();
      var seeking_other_radio = $("#edit-submitted-records-fieldset-doc-type-1").parent(".form-item-submitted-records-fieldset-doc-type");
      seeking_other_textarea.insertAfter(seeking_other_radio);

      // Document Request: move the conditional "consumer complaint" fields so they appear after the "consumer complaint" radio button.
      var consumer_complaint_textarea = $(".webform-component--records-fieldset--doc-consumer-complaint").detach();
      var consumer_complaint_radio = $("#edit-submitted-records-fieldset-doc-type-2").parent(".form-item-submitted-records-fieldset-doc-type");
      consumer_complaint_textarea.insertAfter(consumer_complaint_radio);

      // Move conditional fields for the "Select a suitable description..." radio button group.

      // Purpose of Request: move the conditional "Commercial" fields so they appear after the "Commercial" radio button.
      var affil_with_corporation_info = $(".webform-component--desc-fieldset--private-info").detach();
      var affil_with_corporation_textarea = $(".webform-component--desc-fieldset--private-name").detach();
      var affil_with_corporation_radio = $("#edit-submitted-desc-fieldset-select-suitable-description-and-purpose-1").parent(".form-item-submitted-desc-fieldset-select-suitable-description-and-purpose");
      affil_with_corporation_info.insertAfter(affil_with_corporation_radio);
      affil_with_corporation_textarea.insertAfter($(".webform-component--desc-fieldset--private-info"));

      // Purpose of Request: move the conditional "Educational/non-commercial..." fields so they appear after the "Educational/non-commercial..." radio button.
      var affil_with_educational_info = $(".webform-component--desc-fieldset--edu-info").detach();
      var affil_with_educational_textarea = $(".webform-component--desc-fieldset--edu-name").detach();
      var affil_with_educational_radio = $("#edit-submitted-desc-fieldset-select-suitable-description-and-purpose-2").parent(".form-item-submitted-desc-fieldset-select-suitable-description-and-purpose");
      affil_with_educational_info.insertAfter(affil_with_educational_radio);
      affil_with_educational_textarea.insertAfter($(".webform-component--desc-fieldset--edu-info"));

      // Purpose of Request: move the conditional "News media" fields so they appear after the "News media" radio button.
      var affil_with_news_info = $(".webform-component--desc-fieldset--media-info").detach();
      var affil_with_news_textarea = $(".webform-component--desc-fieldset--media-name").detach();
      var affil_with_news_radio = $("#edit-submitted-desc-fieldset-select-suitable-description-and-purpose-3").parent(".form-item-submitted-desc-fieldset-select-suitable-description-and-purpose");
      affil_with_news_info.insertAfter(affil_with_news_radio);
      affil_with_news_textarea.insertAfter($(".webform-component--desc-fieldset--media-info"));

      // Purpose of Request: move the conditional "Other" fields so they appear after the "Other" radio button.
      var affil_with_other_info = $(".webform-component--desc-fieldset--other-info").detach();
      var affil_with_other_textarea = $(".webform-component--desc-fieldset--other-name").detach();
      var affil_with_other_radio = $("#edit-submitted-desc-fieldset-select-suitable-description-and-purpose-4").parent(".form-item-submitted-desc-fieldset-select-suitable-description-and-purpose");
      affil_with_other_info.insertAfter(affil_with_other_radio);
      affil_with_other_textarea.insertAfter($(".webform-component--desc-fieldset--other-info"));

      // Add required asterisk to Terms & Conditions checkbox and fieldset legends for both radio button groups.
      var required_asterisk = '<span class="form-required" title="This field is required.">*</span>';
      //$(".form-item-submitted-records-fieldset-term-conditions-yes label.option").append(required_asterisk);
      $(".webform-component--records-fieldset legend").append(' ' + required_asterisk);
      $(".webform-component--desc-fieldset legend").append(' ' + required_asterisk);

      // Add commas (and remove non-currency characters) as user types into the Fee field.
      $(".webform-component--max-amount input.form-text").keyup(function(event) {
        // Ignore arrow keys.
        if(event.which >= 37 && event.which <= 40) return;
        // Ignore comma (188), decimal point (110) and period (190).
        if(event.which == 188 || event.which == 110 || event.which == 190) return;

        // Format currency value.
        $(this).val(function(index, value) {
          // Remove all non-numeric characters, then add comma between every set of 3 digits (if there is an additional digit in front of the set).
          // Also remove extra trailing decimal points.
          return value
            .replace(/[^0-9.]/g, "")
            .replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")
            .replace(/(\.\d{2}).+/g, "$1");
        });
      });
      // Do additional cleanup on Fee field, once user finishes filling it out.
      $(".webform-component--max-amount input.form-text").blur(function(event) {
        $(this).val(function(index, value) {
          // Make sure that there are two digits after the decimal point; if there isn't
          // a .XX (hundredths place) at the end of the value, then add in .00 to the value.
          // Also, remove extraneous characters and leading zeroes from beginning/end of the value.
          return value
            .replace(/(\.\d)$/, "$10")
            .replace(/(^\D+|\D+$)/, "")
            .replace(/^[0,]+([0-9]+)/, "$1")
            .replace(/^([^.]+)$/, "$1.00");
        });
      });
    } // End of FOIA code.

    // Fix empty collapsible field_groups (aka "accordions").
    // This can occur when a Viewfield is displayed inside of a collapsible field_group.
    // Since the Viewfield doesn't properly signal when it contains no results, the
    // field_group/accordion still gets displayed. Currently this only occurs w/
    // the following content types:
    // - Custom Page (w/n Paragraphs items only)
    // - Public Event
    // - Public Comment Initiative
    if ($('body').hasClass('node-type-event') || $('body').hasClass('node-type-initiative') || $('body').hasClass('node-type-custom-page')) {
      // Remove each empty field_group (collapsible fieldset aka accordion or open div).
      $('#main fieldset.collapsible, #main .field-group-div').each(function() {
        // Only remove the field_group if it contains empty Viewfield and no other field content.
        var field_group_is_empty = true;

        // Check if field_group contains any non-empty Viewfields.
        $(this).find('.field-type-viewfield .view').each(function() {
          if ($(this).html().trim()) {
            // The field_group contains a Viewfield that is NOT empty.
            field_group_is_empty = false;
          }
        });

        // Check if field_group contains any other non-empty fields.
        $(this).find('.field').not('.field-type-viewfield').each(function() {
          // The field_group contains other NON-empty fields.
          field_group_is_empty = false;
        });

        // If field_group is empty, remove it from the DOM.
        if (field_group_is_empty) {
          $(this).remove();
        }
      });
    }

    //Control Photo Gallery slides by clicking the thumbnail preview below
    $('#widget_pager_bottom_photo_gallery-block_1 .views-slideshow-pager-field-item').each(function(index) {
      var thumbnailIndex = index;
      $(this).find('a').on('click', function(e) {
        e.preventDefault();
        $('#flexslider_views_slideshow_main_photo_gallery-block_1 ol.flex-control-nav li:nth-of-type(' + (thumbnailIndex + 1) + ') a' ).trigger('click');
      })
    });

  });

})(jQuery);
;
/*
selectivizr v1.0.2 - (c) Keith Clark, freely distributable under the terms 
of the MIT license.

selectivizr.com
*/
/* 
  
Notes about this source
-----------------------

 * The #DEBUG_START and #DEBUG_END comments are used to mark blocks of code
   that will be removed prior to building a final release version (using a
   pre-compression script)
  
  
References:
-----------
 
 * CSS Syntax          : http://www.w3.org/TR/2003/WD-css3-syntax-20030813/#style
 * Selectors           : http://www.w3.org/TR/css3-selectors/#selectors
 * IE Compatability    : http://msdn.microsoft.com/en-us/library/cc351024(VS.85).aspx
 * W3C Selector Tests  : http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/html/tests/
 
*/

(function(win) {

	// If browser isn't IE, then stop execution! This handles the script 
	// being loaded by non IE browsers because the developer didn't use 
	// conditional comments.
	if (/*@cc_on!@*/true) return;

	// =========================== Init Objects ============================

	var doc = document;
	var root = doc.documentElement;
	var xhr = getXHRObject();
	var ieVersion = /MSIE (\d+)/.exec(navigator.userAgent)[1];
	
	// If were not in standards mode, IE is too old / new or we can't create
	// an XMLHttpRequest object then we should get out now.
	if (doc.compatMode != 'CSS1Compat' || ieVersion<6 || ieVersion>8 || !xhr) {
		return;
	}
	
	
	// ========================= Common Objects ============================

	// Compatiable selector engines in order of CSS3 support. Note: '*' is
	// a placholder for the object key name. (basically, crude compression)
	var selectorEngines = {
		"NW"								: "*.Dom.select",
		"MooTools"							: "$$",
		"DOMAssistant"						: "*.$", 
		"Prototype"							: "$$",
		"YAHOO"								: "*.util.Selector.query",
		"Sizzle"							: "*", 
		"jQuery"							: "*",
		"dojo"								: "*.query"
	};

	var selectorMethod;
	var enabledWatchers 					= [];     // array of :enabled/:disabled elements to poll
	var ie6PatchID 							= 0;      // used to solve ie6's multiple class bug
	var patchIE6MultipleClasses				= true;   // if true adds class bloat to ie6
	var namespace 							= "slvzr";
	
	// Stylesheet parsing regexp's
	var RE_COMMENT							= /(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)\s*/g;
	var RE_IMPORT							= /@import\s*(?:(?:(?:url\(\s*(['"]?)(.*)\1)\s*\))|(?:(['"])(.*)\3))[^;]*;/g;
	var RE_ASSET_URL 						= /\burl\(\s*(["']?)(?!data:)([^"')]+)\1\s*\)/g;
	var RE_PSEUDO_STRUCTURAL				= /^:(empty|(first|last|only|nth(-last)?)-(child|of-type))$/;
	var RE_PSEUDO_ELEMENTS					= /:(:first-(?:line|letter))/g;
	var RE_SELECTOR_GROUP					= /(^|})\s*([^\{]*?[\[:][^{]+)/g;
	var RE_SELECTOR_PARSE					= /([ +~>])|(:[a-z-]+(?:\(.*?\)+)?)|(\[.*?\])/g; 
	var RE_LIBRARY_INCOMPATIBLE_PSEUDOS		= /(:not\()?:(hover|enabled|disabled|focus|checked|target|active|visited|first-line|first-letter)\)?/g;
	var RE_PATCH_CLASS_NAME_REPLACE			= /[^\w-]/g;
	
	// HTML UI element regexp's
	var RE_INPUT_ELEMENTS					= /^(INPUT|SELECT|TEXTAREA|BUTTON)$/;
	var RE_INPUT_CHECKABLE_TYPES			= /^(checkbox|radio)$/;

	// Broken attribute selector implementations (IE7/8 native [^=""], [$=""] and [*=""])
	var BROKEN_ATTR_IMPLEMENTATIONS			= ieVersion>6 ? /[\$\^*]=(['"])\1/ : null;

	// Whitespace normalization regexp's
	var RE_TIDY_TRAILING_WHITESPACE			= /([(\[+~])\s+/g;
	var RE_TIDY_LEADING_WHITESPACE			= /\s+([)\]+~])/g;
	var RE_TIDY_CONSECUTIVE_WHITESPACE		= /\s+/g;
	var RE_TIDY_TRIM_WHITESPACE				= /^\s*((?:[\S\s]*\S)?)\s*$/;
	
	// String constants
	var EMPTY_STRING						= "";
	var SPACE_STRING						= " ";
	var PLACEHOLDER_STRING					= "$1";

	// =========================== Patching ================================

	// --[ patchStyleSheet() ]----------------------------------------------
	// Scans the passed cssText for selectors that require emulation and
	// creates one or more patches for each matched selector.
	function patchStyleSheet( cssText ) {
		return cssText.replace(RE_PSEUDO_ELEMENTS, PLACEHOLDER_STRING).
			replace(RE_SELECTOR_GROUP, function(m, prefix, selectorText) {	
    			var selectorGroups = selectorText.split(",");
    			for (var c = 0, cs = selectorGroups.length; c < cs; c++) {
    				var selector = normalizeSelectorWhitespace(selectorGroups[c]) + SPACE_STRING;
    				var patches = [];
    				selectorGroups[c] = selector.replace(RE_SELECTOR_PARSE, 
    					function(match, combinator, pseudo, attribute, index) {
    						if (combinator) {
    							if (patches.length>0) {
    								applyPatches( selector.substring(0, index), patches );
    								patches = [];
    							}
    							return combinator;
    						}		
    						else {
    							var patch = (pseudo) ? patchPseudoClass( pseudo ) : patchAttribute( attribute );
    							if (patch) {
    								patches.push(patch);
    								return "." + patch.className;
    							}
    							return match;
    						}
    					}
    				);
    			}
    			return prefix + selectorGroups.join(",");
    		});
	};

	// --[ patchAttribute() ]-----------------------------------------------
	// returns a patch for an attribute selector.
	function patchAttribute( attr ) {
		return (!BROKEN_ATTR_IMPLEMENTATIONS || BROKEN_ATTR_IMPLEMENTATIONS.test(attr)) ? 
			{ className: createClassName(attr), applyClass: true } : null;
	};

	// --[ patchPseudoClass() ]---------------------------------------------
	// returns a patch for a pseudo-class
	function patchPseudoClass( pseudo ) {

		var applyClass = true;
		var className = createClassName(pseudo.slice(1));
		var isNegated = pseudo.substring(0, 5) == ":not(";
		var activateEventName;
		var deactivateEventName;

		// if negated, remove :not() 
		if (isNegated) {
			pseudo = pseudo.slice(5, -1);
		}
		
		// bracket contents are irrelevant - remove them
		var bracketIndex = pseudo.indexOf("(")
		if (bracketIndex > -1) {
			pseudo = pseudo.substring(0, bracketIndex);
		}		
		
		// check we're still dealing with a pseudo-class
		if (pseudo.charAt(0) == ":") {
			switch (pseudo.slice(1)) {

				case "root":
					applyClass = function(e) {
						return isNegated ? e != root : e == root;
					}
					break;

				case "target":
					// :target is only supported in IE8
					if (ieVersion == 8) {
						applyClass = function(e) {
							var handler = function() { 
								var hash = location.hash;
								var hashID = hash.slice(1);
								return isNegated ? (hash == EMPTY_STRING || e.id != hashID) : (hash != EMPTY_STRING && e.id == hashID);
							};
							addEvent( win, "hashchange", function() {
								toggleElementClass(e, className, handler());
							})
							return handler();
						}
						break;
					}
					return false;
				
				case "checked":
					applyClass = function(e) { 
						if (RE_INPUT_CHECKABLE_TYPES.test(e.type)) {
							addEvent( e, "propertychange", function() {
								if (event.propertyName == "checked") {
									toggleElementClass( e, className, e.checked !== isNegated );
								} 							
							})
						}
						return e.checked !== isNegated;
					}
					break;
					
				case "disabled":
					isNegated = !isNegated;

				case "enabled":
					applyClass = function(e) { 
						if (RE_INPUT_ELEMENTS.test(e.tagName)) {
							addEvent( e, "propertychange", function() {
								if (event.propertyName == "$disabled") {
									toggleElementClass( e, className, e.$disabled === isNegated );
								} 
							});
							enabledWatchers.push(e);
							e.$disabled = e.disabled;
							return e.disabled === isNegated;
						}
						return pseudo == ":enabled" ? isNegated : !isNegated;
					}
					break;
					
				case "focus":
					activateEventName = "focus";
					deactivateEventName = "blur";
								
				case "hover":
					if (!activateEventName) {
						activateEventName = "mouseenter";
						deactivateEventName = "mouseleave";
					}
					applyClass = function(e) {
						addEvent( e, isNegated ? deactivateEventName : activateEventName, function() {
							toggleElementClass( e, className, true );
						})
						addEvent( e, isNegated ? activateEventName : deactivateEventName, function() {
							toggleElementClass( e, className, false );
						})
						return isNegated;
					}
					break;
					
				// everything else
				default:
					// If we don't support this pseudo-class don't create 
					// a patch for it
					if (!RE_PSEUDO_STRUCTURAL.test(pseudo)) {
						return false;
					}
					break;
			}
		}
		return { className: className, applyClass: applyClass };
	};

	// --[ applyPatches() ]-------------------------------------------------
	// uses the passed selector text to find DOM nodes and patch them	
	function applyPatches(selectorText, patches) {
		var elms;
		
		// Although some selector libraries can find :checked :enabled etc. 
		// we need to find all elements that could have that state because 
		// it can be changed by the user.
		var domSelectorText = selectorText.replace(RE_LIBRARY_INCOMPATIBLE_PSEUDOS, EMPTY_STRING);
		
		// If the dom selector equates to an empty string or ends with 
		// whitespace then we need to append a universal selector (*) to it.
		if (domSelectorText == EMPTY_STRING || domSelectorText.charAt(domSelectorText.length - 1) == SPACE_STRING) {
			domSelectorText += "*";
		}
		
		// Ensure we catch errors from the selector library
		try {
			elms = selectorMethod( domSelectorText );
		} catch (ex) {
			// #DEBUG_START
			log( "Selector '" + selectorText + "' threw exception '" + ex + "'" );
			// #DEBUG_END
		}


		if (elms) {
			for (var d = 0, dl = elms.length; d < dl; d++) {	
				var elm = elms[d];
				var cssClasses = elm.className;
				for (var f = 0, fl = patches.length; f < fl; f++) {
					var patch = patches[f];
					
					if (!hasPatch(elm, patch)) {
						if (patch.applyClass && (patch.applyClass === true || patch.applyClass(elm) === true)) {
							cssClasses = toggleClass(cssClasses, patch.className, true );
						}
					}
				}
				elm.className = cssClasses;
			}
		}
	};

	// --[ hasPatch() ]-----------------------------------------------------
	// checks for the exsistence of a patch on an element
	function hasPatch( elm, patch ) {
		return new RegExp("(^|\\s)" + patch.className + "(\\s|$)").test(elm.className);
	};
	
	
	// =========================== Utility =================================
	
	function createClassName( className ) {
		return namespace + "-" + ((ieVersion == 6 && patchIE6MultipleClasses) ?
			ie6PatchID++
		:
			className.replace(RE_PATCH_CLASS_NAME_REPLACE, function(a) { return a.charCodeAt(0) }));
	};

	// --[ log() ]----------------------------------------------------------
	// #DEBUG_START
	function log( message ) {
		if (win.console) {
			win.console.log(message);
		}
	};
	// #DEBUG_END

	// --[ trim() ]---------------------------------------------------------
	// removes leading, trailing whitespace from a string
	function trim( text ) {
		return text.replace(RE_TIDY_TRIM_WHITESPACE, PLACEHOLDER_STRING);
	};

	// --[ normalizeWhitespace() ]------------------------------------------
	// removes leading, trailing and consecutive whitespace from a string
	function normalizeWhitespace( text ) {
		return trim(text).replace(RE_TIDY_CONSECUTIVE_WHITESPACE, SPACE_STRING);
	};

	// --[ normalizeSelectorWhitespace() ]----------------------------------
	// tidies whitespace around selector brackets and combinators
	function normalizeSelectorWhitespace( selectorText ) {
		return normalizeWhitespace(selectorText.
			replace(RE_TIDY_TRAILING_WHITESPACE, PLACEHOLDER_STRING).
			replace(RE_TIDY_LEADING_WHITESPACE, PLACEHOLDER_STRING)
		);
	};

	// --[ toggleElementClass() ]-------------------------------------------
	// toggles a single className on an element
	function toggleElementClass( elm, className, on ) {
		var oldClassName = elm.className;
		var newClassName = toggleClass(oldClassName, className, on);
		if (newClassName != oldClassName) {
			elm.className = newClassName;
			elm.parentNode.className += EMPTY_STRING;
		}
	};

	// --[ toggleClass() ]--------------------------------------------------
	// adds / removes a className from a string of classNames. Used to 
	// manage multiple class changes without forcing a DOM redraw
	function toggleClass( classList, className, on ) {
		var re = RegExp("(^|\\s)" + className + "(\\s|$)");
		var classExists = re.test(classList);
		if (on) {
			return classExists ? classList : classList + SPACE_STRING + className;
		} else {
			return classExists ? trim(classList.replace(re, PLACEHOLDER_STRING)) : classList;
		}
	};
	
	// --[ addEvent() ]-----------------------------------------------------
	function addEvent(elm, eventName, eventHandler) {
		elm.attachEvent("on" + eventName, eventHandler);
	};

	// --[ getXHRObject() ]-------------------------------------------------
	function getXHRObject()
	{
		if (win.XMLHttpRequest) {
			return new XMLHttpRequest;
		}
		try	{ 
			return new ActiveXObject('Microsoft.XMLHTTP');
		} catch(e) { 
			return null;
		}
	};

	// --[ loadStyleSheet() ]-----------------------------------------------
	function loadStyleSheet( url ) {
		xhr.open("GET", url, false);
		xhr.send();
		return (xhr.status==200) ? xhr.responseText : EMPTY_STRING;	
	};
	
	// --[ resolveUrl() ]---------------------------------------------------
	// Converts a URL fragment to a fully qualified URL using the specified
	// context URL. Returns null if same-origin policy is broken
	function resolveUrl( url, contextUrl ) {
	
		function getProtocolAndHost( url ) {
			return url.substring(0, url.indexOf("/", 8));
		};
		
		// absolute path
		if (/^https?:\/\//i.test(url)) {
			return getProtocolAndHost(contextUrl) == getProtocolAndHost(url) ? url : null;
		}
		
		// root-relative path
		if (url.charAt(0)=="/")	{
			return getProtocolAndHost(contextUrl) + url;
		}

		// relative path
		var contextUrlPath = contextUrl.split(/[?#]/)[0]; // ignore query string in the contextUrl	
		if (url.charAt(0) != "?" && contextUrlPath.charAt(contextUrlPath.length - 1) != "/") {
			contextUrlPath = contextUrlPath.substring(0, contextUrlPath.lastIndexOf("/") + 1);
		}
		
		return contextUrlPath + url;
	};
	
	// --[ parseStyleSheet() ]----------------------------------------------
	// Downloads the stylesheet specified by the URL, removes it's comments
	// and recursivly replaces @import rules with their contents, ultimately
	// returning the full cssText.
	function parseStyleSheet( url ) {
		if (url) {
			return loadStyleSheet(url).replace(RE_COMMENT, EMPTY_STRING).
			replace(RE_IMPORT, function( match, quoteChar, importUrl, quoteChar2, importUrl2 ) { 
				return parseStyleSheet(resolveUrl(importUrl || importUrl2, url));
			}).
			replace(RE_ASSET_URL, function( match, quoteChar, assetUrl ) { 
				quoteChar = quoteChar || EMPTY_STRING;
				return " url(" + quoteChar + resolveUrl(assetUrl, url) + quoteChar + ") "; 
			});
		}
		return EMPTY_STRING;
	};
	
	// --[ init() ]---------------------------------------------------------
	function init() {
		// honour the <base> tag
		var url, stylesheet;
		var baseTags = doc.getElementsByTagName("BASE");
		var baseUrl = (baseTags.length > 0) ? baseTags[0].href : doc.location.href;
		
		/* Note: This code prevents IE from freezing / crashing when using 
		@font-face .eot files but it modifies the <head> tag and could
		trigger the IE stylesheet limit. It will also cause FOUC issues.
		If you choose to use it, make sure you comment out the for loop 
		directly below this comment.

		var head = doc.getElementsByTagName("head")[0];
		for (var c=doc.styleSheets.length-1; c>=0; c--) {
			stylesheet = doc.styleSheets[c]
			head.appendChild(doc.createElement("style"))
			var patchedStylesheet = doc.styleSheets[doc.styleSheets.length-1];
			
			if (stylesheet.href != EMPTY_STRING) {
				url = resolveUrl(stylesheet.href, baseUrl)
				if (url) {
					patchedStylesheet.cssText = patchStyleSheet( parseStyleSheet( url ) )
					stylesheet.disabled = true
					setTimeout( function () {
						stylesheet.owningElement.parentNode.removeChild(stylesheet.owningElement)
					})
				}
			}
		}
		*/
		
		for (var c = 0; c < doc.styleSheets.length; c++) {
			stylesheet = doc.styleSheets[c]
			if (stylesheet.href != EMPTY_STRING) {
				url = resolveUrl(stylesheet.href, baseUrl);
				if (url) {
					stylesheet.cssText = patchStyleSheet( parseStyleSheet( url ) );
				}
			}
		}
		
		// :enabled & :disabled polling script (since we can't hook 
		// onpropertychange event when an element is disabled) 
		if (enabledWatchers.length > 0) {
			setInterval( function() {
				for (var c = 0, cl = enabledWatchers.length; c < cl; c++) {
					var e = enabledWatchers[c];
					if (e.disabled !== e.$disabled) {
						if (e.disabled) {
							e.disabled = false;
							e.$disabled = true;
							e.disabled = true;
						}
						else {
							e.$disabled = e.disabled;
						}
					}
				}
			},250)
		}
	};
	
	// Bind selectivizr to the ContentLoaded event. 
	ContentLoaded(win, function() {
		// Determine the "best fit" selector engine
		for (var engine in selectorEngines) {
			var members, member, context = win;
			if (win[engine]) {
				members = selectorEngines[engine].replace("*", engine).split(".");
				while ((member = members.shift()) && (context = context[member])) {}
				if (typeof context == "function") {
					selectorMethod = context;
					init();
					return;
				}
			}
		}
	});
	
	
	/*!
	 * ContentLoaded.js by Diego Perini, modified for IE<9 only (to save space)
	 *
	 * Author: Diego Perini (diego.perini at gmail.com)
	 * Summary: cross-browser wrapper for DOMContentLoaded
	 * Updated: 20101020
	 * License: MIT
	 * Version: 1.2
	 *
	 * URL:
	 * http://javascript.nwbox.com/ContentLoaded/
	 * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
	 *
	 */

	// @w window reference
	// @f function reference
	function ContentLoaded(win, fn) {

		var done = false, top = true,
		init = function(e) {
			if (e.type == "readystatechange" && doc.readyState != "complete") return;
			(e.type == "load" ? win : doc).detachEvent("on" + e.type, init, false);
			if (!done && (done = true)) fn.call(win, e.type || e);
		},
		poll = function() {
			try { root.doScroll("left"); } catch(e) { setTimeout(poll, 50); return; }
			init('poll');
		};

		if (doc.readyState == "complete") fn.call(win, EMPTY_STRING);
		else {
			if (doc.createEventObject && root.doScroll) {
				try { top = !win.frameElement; } catch(e) { }
				if (top) poll();
			}
			addEvent(doc,"readystatechange", init);
			addEvent(win,"load", init);
		}
	};
})(this);;
